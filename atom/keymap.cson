# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

# 'atom-text-editor':
#   'ctrl-k right':'pane:split-right'
#

'body':
  'ctrl-w': '!unset'
  'ctrl-shift-w': '!unset'

  'ctrl-w ctrl-w': 'core:close'
  'ctrl-w ctrl-shift-w': 'window:close'

'atom-workspace':
# 'atom-text-editor.source.js':
# 'atom-text-editor[data-grammer~=js]':
  'alt-.': 'cursor-history:next'
  'alt-,': 'cursor-history:prev'
  'alt-;': 'cursor-history:next'
  'alt-l': 'cursor-history:prev'
  'alt-t alt-t': 'imdone-atom:tasks'

  'f9': 'tree-view:toggle'


'atom-text-editor':
  # emacs keybindings overwritten by packages
  "alt-ctrl-b": "editor:move-to-previous-subword-boundary",
  'alt-ctrl-d': 'find-and-replace:toggle-whole-word-option'

  # TODO: create or find a bracket-matcher-extras
  'ctrl-shift-m': 'bracket-matcher-extras:select-outside-brackets'

  'alt-}': 'pane:show-next-item'
  'alt-{': 'pane:show-previous-item'
'atom-text-editor:not([mini])':
  'alt-shift-r': 'run-in-terminal:editor-start-terminal-here'
  'alt-shift-g': 'require-opener:open-selections-on-npm'
  'alt-shift-n': 'require-opener:open-selections-on-github'
  'alt-shift-o': 'require-opener:open-selections-in-atom'
  'alt-shift-d': 'require-opener:open-selections-readmes'
  'alt-shift-d': 'require-opener:open-selections-readmes'
  # 'ctrl-alt-d': 'tern:definition'
  # 'ctrl-alt-c': 'tern:rename'
  # default: 'ctrl-shift-r': 'tern:references'
  # possible ideal: 'ctrl-alt-r': 'tern:references'
  'ctrl-shift-e': 'tern:references'

  'ctrl-shift-r': 'symbols-view:toggle-project-symbols'
  'ctrl-k ctrl-j': 'fold-functions:fold'
  'ctrl-k ctrl-h': 'fold-functions:unfold'


  'cmd-k cmd-j': 'fold-functions:fold'
  'cmd-k cmd-h': 'fold-functions:unfold'
  'cmd-k cmd-/': 'fold-comments:toggle'

  # darwin only
  'ctrl-left': 'editor:move-to-previous-subword-boundary'
  'ctrl-right': 'editor:move-to-next-subword-boundary'

  # emmet
  'ctrl-e ctrl-e': 'emmet:expand-abbreviation'
  'ctrl-e ctrl-o': 'emmet:balance-outward'
  'ctrl-e ctrl-i': 'emmet:balance-inward'
  'ctrl-e ctrl-j': 'emmet:matching-pair'
  'ctrl-alt-right': 'emmet:next-edit-point'
  'ctrl-alt-left': 'emmet:prev-edit-point'
  'ctrl-e ctrl-x': 'emmet:split-join-tag'
  'ctrl-shift-y': 'emmet:evaluate-math-expression'
  'ctrl-e ctrl-r': 'emmet:reflect-css-value'
  'ctrl-e ctrl-u': 'emmet:update-image-size'
  "ctrl-e ctrl-n": 'emmet:encode-decode-data-url'
  "ctrl-e ctrl-t": 'emmet:update-tag'
  'ctrl-e ctrl-w': 'emmet:wrap-with-abbreviation'
  'ctrl-e ctrl-d': 'emmet:remove-tag'
  'ctrl-alt-enter': 'emmet:interactive-expand-abbreviation'

  'ctrl-shift-/': 'emmet:toggle-comment'

# language-specific Tab triggers
# you can add more triggers by changing `grammar` attribute values
'atom-text-editor[data-grammar="text html basic"]:not([mini]), atom-text-editor[data-grammar~="erb"]:not([mini]), atom-text-editor[data-grammar~="jade"]:not([mini]), atom-text-editor[data-grammar~="css"]:not([mini]), atom-text-editor[data-grammar~="stylus"]:not([mini]), atom-text-editor[data-grammar~="sass"]:not([mini])':
  'enter': 'emmet:insert-formatted-line-break-only'
  'alt-shift-k': 'emmet:select-next-item'
  'alt-shift-j': 'emmet:select-previous-item'
  'ctrl-shift-j': 'emmet:merge-lines'
