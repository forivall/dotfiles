#!/usr/bin/env zsh

set -eo pipefail

autoload colors && colors

echo ---

if git ls-files --error-unmatch $1 2>/dev/null >/dev/null; then
  numstat=($(git diff --numstat $1))
  added=${numstat[1]}
  removed=${numstat[2]}
elif [[ -f $@ ]]; then
  numstat=($(wc -l $1))
  added=${numstat[1]}
  removed=""
fi
if (( added > 0 || removed > 0 )); then
  if (( removed > 0 )); then
    echo "${fg[cyan]}Change${reset_color} $added new, $removed removed line(s)"
  elif [[ -z "$removed" ]]; then
    echo "${fg[cyan]}Add${reset_color} new file with $added line(s)"
  else
    echo "${fg[cyan]}Change${reset_color} $added new line(s)"
  fi
  total=$(( added + removed ))
  totallen=${#total}
  STAT_COLUMNS=$(( COLUMNS - totallen - 1 ))
  if $(( total > STAT_COLUMNS )); then
    added=$(( STAT_COLUMNS * added / total ))
    removed=$(( STAT_COLUMNS * added / total ))
  fi
  echo $total ${fg[green]}${(l:${added}::+:)}${fg[red]}${(l:${removed}::-:)}${reset_color}
elif [[ -d $@ ]]; then
  if [[ -e $1/.git ]]; then
    echo "${fg[cyan]}Add${reset_color} subproject"
  else
    echo "${fg[cyan]}Add${reset_color} ${fg[yellow]}$(git ls-files --other --exclude-standard $@ | wc -l)${reset_color} new file(s)"
    COLUMNS=$COLUMNS exa --grid -x -F --git --color=always $@
  fi
else
  echo "${fg[cyan]}Add${reset_color} empty file"
fi


#  $@ | delta

