#!/usr/bin/env zsh

function git-watch-staged {
  local asglob=false;
  if [[ $1 = --asglob ]]; then
    asglob=true
    shift
  fi

  local glob="$1"; shift

  if [[ glob = --help ]]; then
    echo 'usage: git-watch-staged <glob> <command> [...arguments]'
    echo 'example: git-watch-staged '*.[jt]s' npx eslint'
    return
  fi

  local -a changed
  local waitcolor
  echo -en "${fg[green]}Waiting for changes...$reset_color\r"
  local output
  while output="${$(git-stagechange-wait "$glob")}"; do
    changed=(${(f)output})
    if [[ "${#changed[@]}" == "0" ]]; then continue; fi
    echo -en "${fg[cyan]}Changed ${#changed} file(s)...$reset_color  \r"
    if $asglob && (( ${#changed} > 1 )); then
      changed="{${(j/,/)changed}}"
    fi
    $@ "${changed[@]}" && waitcolor=green || waitcolor=red
    echo -en "${fg[$waitcolor]}Waiting for changes...$reset_color            \r"
  done
}

if [[ $ZSH_EVAL_CONTEXT == toplevel ]]; then
  git-watch-staged $@
fi
