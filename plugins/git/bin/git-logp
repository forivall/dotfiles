#!/usr/bin/env zsh

__plugin_dirname=${0:a:h:h}

args=()
pretty=()
files=()
dashdash=false
allfiles=false
reflog=false
stash=false
showdiff=true

while (( $# > 0 )); do
case "$1" in
  -h)
    git log -h | sd 'usage: git log' 'usage: git logp' | rg -v 'or: git show'
    echo '    --all-files           filter commits on files, but show all files'
    echo
    echo 'in the less pager, use j / k to navigate history backward / forward'
    exit
  ;;
  stash) stash=true; args+=(stash); pretty+=(--pretty=medium) ;&
  --walk-reflogs) reflog=true; shift; continue; ;;
  --stat|--name-only|--name-status) showdiff=false ;&
  --pretty=*)
    pretty+=($1); shift; continue; ;;
  --pretty) pretty+=($1 $2); shift; shift; continue; ;;
  --all-files) allfiles=true; shift; continue; ;;
  --) dashdash=true; args+=($1); shift; continue; ;;
  *)
    args+=($1)
    if $dashdash || [[ -e $1 ]]; then
      files+=($1)
    fi
    shift
    continue
  ;;
esac
break;
done

if $reflog; then
  refspecs="$(git reflog --pretty=format:%gd --max-count=100 ${args[@]})"
else
  refspecs="$(git log --pretty=%h --max-count=100 ${args[@]})"
fi

dashdash=""
$allfiles || dashdash+="${(q+@)files[@]} "

output=()
for commit in ${(f)refspecs}; do
  if $reflog; then
    if $showdiff; then
      output+=("<(git reflog show --color -n1 ${(q+@)pretty[@]} ${(q+@)commit}; git show --color --pretty= ${(q+@)commit} -- $dashdash| delta)")
    else
      output+=("<(git reflog show --color -n1 ${(q+@)pretty[@]} ${(q+@)commit}; echo; git show --color ${(q+@)pretty[@]} --pretty= ${(q+@)commit} -- $dashdash| delta)")
    fi
  else
    output+=("<(git show --color ${(q+@)pretty[@]} ${(q+@)commit} -- $dashdash| delta)")
  fi
done

eval less -f +X -x2 -R --lesskey-src=${__plugin_dirname}/share/git-logp.lesskey ${output[@]}

wait
