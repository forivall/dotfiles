#!/usr/bin/env zsh

set -euo pipefail

__plugin_dirname=${0:a:h:h}

autoload colors && colors

OPTS_SPEC="\
git checkout-branch [<options>] <args>...
--
h,help    show the help
s,search  search mode
a,all     all branches
r,remote? remote
p,prefix  filter by current '+' prefix
f,force   use --force when checking out
d,detach  use --detach when checking out
"
eval "$(echo "$OPTS_SPEC" | git rev-parse --parseopt --stuck-long -- "$@" || echo exit $?)"

term_menu_options=()
all=false
remotes=false
remote_option=
checkout_options=()
pattern=

index=0
for arg in $@; do
  index=$((index+1))
  case "$arg" in
    --search) term_menu_options+=(--search-key none) ;;
    --all) all=true; remotes=true ;;
    --remote=*) remote_option="${arg#--remote=}" ;&
    --remote) remotes=true ;;
    --prefix)
      branch_name=$(git rev-parse --symbolic-full-name HEAD)
      branch_name=${branch_name#refs/heads/}
      pattern="${branch_name%+*}*" ;;
    --force|--detach) checkout_options+=(-$OPT) ;;
    --) break; ;;
  esac
done

shift $index

if (( index == 1 && $# > 0 )); then
  if [[ $1 == +* ]]; then
    branch_name=$(git rev-parse --symbolic-full-name HEAD)
    git checkout -b ${branch_name#refs/heads/}$1
  else
    git checkout -b $@
  fi
  exit
fi

branches=()
if ! $remotes || $all; then
  branches=($(git rev-parse --symbolic --branches=$pattern))
fi
remote_branches=()
if $remotes; then
  remote_branches=($(git rev-parse --symbolic --exclude="*/HEAD" $(print -l -- --exclude="*/"${^branches}) --remotes=$remote_option))

  if ! $all && (( ${#remote_branches} == 0 )); then
    echo "no tracking branches for remote $remote_option"
    exit 1
  fi
fi

branch_format="%(if)%(HEAD)%(then)* %(color:green)%(else)%(if)%(worktreepath)%(then)+ %(color:cyan)%(else)  %(color:normal)%(end)%(end)"

term_menu_options+=(
  --no-preview-border
  --preview-size 0.6
  --preview "$__plugin_dirname/__git-checkoutb-preview {}"
)

remote_options=()
if $remotes; then
  remote_options_str="$(printf '%1$s|--remotes %1$s\n' ${^remote_branches})"
  remote_options=("${(f)remote_options_str[@]}")
fi

if [[ ${#branches} == 0 && ${#remote_branches} == 0 ]]; then
  i=1
else
  simple-term-menu $term_menu_options "${branches[@]}" "${remote_options[@]}" && i=0 || i=$?
fi
if (( $i == 0 )) ; then exit; fi

if (( $i > ${#branches})); then
  idx=$(( i - ${#branches}))
  remote_branch=${remote_branches[idx]}
  if [[ -z "$remote_option" ]]; then
    command=(git checkout "${checkout_options[@]}" -b ${remote_branch#*/} $remote_branch)
  else
    command=(git checkout "${checkout_options[@]}" -b $remote_branch $remote_option/$remote_branch)
  fi
else
  branch=${branches[i]}
  command=(git checkout "${checkout_options[@]}" $branch)
fi

echo '>' ${command[@]}
${command[@]}
