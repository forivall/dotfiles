#compdef git-wt
#description manage multiple working dirs attached to the same repository (alias)

__git_wt_extract_aliases () {
  local -a tmp
  tmp=(${${(0)"$(_call_program aliases "git config -z --get-regexp '^alias.worktree-'")"}#alias.worktree-})
  if (( ${#tmp} > 0 )); then
      wt_aliases=(${^tmp/$'\n'/:alias for \'}\')
  else
      wt_aliases=()
  fi
}

_git-wt() {
  if (( CURRENT > 2 )); then
    local -a aliases
    local -A git_wt_aliases
    local a k v
    local endopt='!(-)--end-of-options'
    aliases=(${(0)"$(_call_program aliases git config -z --get-regexp '\^alias\\.worktree-')"})
    for a in ${aliases}; do
        k="${${a/$'\n'*}/alias.worktree-}"
        v="${a#*$'\n'}"
        git_wt_aliases[$k]="$v"
    done

    if (( $+git_wt_aliases[$words[2]] && !$+commands[git-worktree-$words[2]] && !$+functions[_git-worktre-$words[2]] )); then
      local -a tmpwords expalias
      expalias=(${(z)git_wt_aliases[$words[2]]})
      tmpwords=(${expalias})
      if [[ -n "${words[4,-1]}" ]] ; then
        tmpwords+=(${words[4,-1]})
      fi
      [[ -n ${words[$CURRENT]} ]] || tmpwords+=('')
      (( CURRENT += ${#expalias} - 2 ))
      words=("${tmpwords[@]}")
      unset tmpwords expalias
    fi

    unset git_wt_aliases aliases
  elif [[ ${words[1]} == wt ]]; then
    words[1]=worktree
  fi

  _git-worktree
  local ret=$?

  local curcontext="$curcontext" state state_descr line
  declare -A opt_args

  _arguments -C \
    ': :->command' \
    '*::: := ->option-or-argument'

  case $state in
    (command)
      local -a wt_aliases
      __git_wt_extract_aliases
      local cmdtype len dup sep
      local -a allcmds allmatching alts disp expl

      zstyle -s ":completion:${curcontext}:" list-separator sep || sep=--
      for cmdtype in wt_aliases; do
        for dup in ${${wt_aliases%:*}:*allcmds}; do
          wt_aliases=( ${wt_aliases:#$dup:*} )
        done
        local -a wt_aliases_m
        set -A wt_aliases_m ${wt_aliases%%:*}
        allcmds+=( ${(P)${:-wt_aliases_m}} )
      done
      allcmds+=(add: prune: list: lock: move: remove: unlock:)
      zstyle -T ":completion:${curcontext}:" verbose && disp=(-ld 'wt_aliases_d')
      _description '' expl '' # get applicable matchers
      compadd "$expl[@]" -O allmatching -a allcmds
      len=${#${(O)allmatching//?/.}[1]} # length of longest match
      local -a wt_aliases_d
      (( $#disp )) && set -A wt_aliases_d \
          ${${(r.COLUMNS-4.)${(P)cmdtype}/(#s)(#m)[^:]##:/${(r.len.)MATCH[1,-2]} $sep }%% #}
      alts+=( "${cmdtype//_/-}:${${cmdtype//_/ }%%(e|)s}:compadd ${(e)disp} -a wt_aliases_m" )

      _alternative $alts
    ;;
  esac
  return ret
}
_git-wt "$@"
