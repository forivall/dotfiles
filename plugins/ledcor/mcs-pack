#!/usr/bin/env zsh

# requires the jq command line tool
# https://stedolan.github.io/jq/

scriptdir=$0:A
scriptdir=${scriptdir%/*}

MCSAPIDIR="${MCSAPIDIR:-$(echo ~"/MCS APIs")}"
[[ -d $MCSAPIDIR ]] || mkdir -p "$MCSAPIDIR"

source ~/.nvm/nvm.sh

() {
  # TODO: make sure to go to the nearest folder with package.json

  # validate the package.json
  < package.json jq . > /dev/null || exit

  # ensure that the appropriate config files are available
  local configFilesRaw configFiles missingConfigFile
  configFilesRaw="$(< package.json jq -r '.configFiles[]')"
  configFiles=("${(f)configFilesRaw}")
  missingConfigFile=false
  for f in $configFiles ; do
    if [[ ! -f $f ]] ; then
      echo "missing $f"
      missingConfigFile=true
    fi
  done
  if $missingConfigFile ; then return 1; fi

  # TODO: support a .mcsignore file
  # TODO: support automatically uploading

  local filename
  filename="$MCSAPIDIR/$(jq -r .name package.json)-$(jq -r .version package.json | sed 's/\./_/g').zip"

  [[ -d node_modules ]] && mv node_modules .dev_node_modules
  nvm use v0.10.25 || return 1
  if [[ -e npm-shrinkwrap.json ]]; then env rm npm-shrinkwrap.json || return 1; fi
  npm i --production --node-gyp=true || return 1
  npm dedupe
  (( $(< package.json jq '.dependencies|length') == 0 )) || npm shrinkwrap || return 1

  [[ -e "$filename" ]] && trash "$filename"

  local dir
  dir="$(basename $PWD)"

  # TODO: use npm pack + convert it to zip + configFiles to zip
  (cd ..
    typeset -a files
    files=( $dir/**/*(.) )
    echo ${(F)files} | zip "$filename" -@ || return 1
  ) || return 1

  echo "Wrote file to $filename"

  if [[ $1 == '-u' ]] ; then
    apiid="$(jq .oracleMobileApiId package.json -r -e)"
    (( $? == 0 )) && (nvm use 6 && node "$scriptdir/upload-impl.nightmare.js" "$apiid" "$filename") || "not uploading, oracleMobileApiId not in package.json"
  fi

  if [[ -d node_modules ]] ; then env rm -r node_modules || return 1; fi
  [[ -d .dev_node_modules ]] && mv .dev_node_modules node_modules
} "$@"
