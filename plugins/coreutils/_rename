#compdef rename

_arguments -C \
  '(-h --help)'{-h,--help}'[See a usage synopsis]' \
  --man'[Browse the manpage]' \
  {-0,--null}'[Split on NUL bytes instead of newlines]' \
  {-f,--force}'[Rename even when a file with the destination name already exists]' \
  {-i,--interactive}'[Prompt to confirm every action]' \
  {-g,--glob}'[Glob filename arguments]' \
  {-k,--backwards,--reverse-order}'[Process in reverse order]' \
  {-l,--symlink}'[Create symlinks instead of renaming]' \
  {-L,--hardlink}'[Create hard links instead of renaming]' \
  {-M,--use}'[Load perl module]':Module \
  {-n,--just-print,--dry-run}'[Print changes that would be made]' \
  {-N,--counter-format}'[Set a $N counter variable]':template:_message \
  {-p,--mkpath,--make-dirs}'[Create any non-existent directories in the target path]' \
  --stdin'[Always read filenames from stdin]' \
  --no-stdin'[Never read filenames from stdin]' \
  {-t,--sort-time}'[Process in order of file timestamps]' \
  {-T,--transcode}'[Decode from text encoding]':encoding \
  {-v,--verbose}'[Print additional information about the operations]' \
  {-a,--append}'[Append a value to every filename]:from:_message:to:_message' \
  {-A,--prepend}'[Prepend a value to every filename]:from:_message:to:_message' \
  {-c,--lower-case}'[Convert to all lower case]' \
  {-C,--upper-case}'[Convert to all upper case]' \
  {-d,--delete}'[Remove the first occurrence]:str:_message' \
  {-D,--delete-all}'[Remove every occurrence]:str:_message' \
  {-e,--expr}'[Pass the filename to a Perl expression]:perl_code:_message' \
  {-P,--pipe}'[Pass the filename to an external command]:external_command:_command_names -e' \
  {-s,--subst}'[Replace the first occurrence]:from:_message:to:_message' \
  {-S,--subst-all}'[Replace every occurrence]:from:_message:to:_message' \
  {-x,--remove-extension}'[Remove the last extension from a filename]' \
  {-X,--keep-extension}'[Omit the last extension from the operations]' \
  {-z,--sanitize}'[each of --nows --noctrl --nometa --trim]' \
  --camelcase'[Capitalise every separate word]' \
  --urlesc'[Decode URL-escaped filenames, such as wget(1) used to produce]' \
  --nows'[Replace all sequences of whitespace with single underscore characters]' \
  --rews'[Reverse `--nows`: replace each underscore with a space]' \
  --noctrl'[Replace all sequences of control characters with single underscore characters]' \
  --nometa'[Replace every shell meta-character with an underscore]' \
  --trim'[Remove spaces and underscores at ends of]' \
  '*: :_files'
