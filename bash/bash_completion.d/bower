

# Credits to npm's. Awesome completion utility.
#
# Bower completion script, based on npm completion script.

###-begin-bower-completion-###
#
# Installation: bower completion >> ~/.bashrc  (or ~/.zshrc)
# Or, maybe: bower completion > /usr/local/etc/bash_completion.d/bower
#



COMP_WORDBREAKS=${COMP_WORDBREAKS/=/}
COMP_WORDBREAKS=${COMP_WORDBREAKS/@/}
export COMP_WORDBREAKS

if type complete &>/dev/null; then
  _bower_completion () {
    local si="$IFS"
    local cur words cword prev;
    _get_comp_words_by_ref -n =: cur words cword prev;
    if [[ "${COMP_WORDS[1]}" == "install" ]] ; then
      if [ -z "$__bower_package_list" ];then
        __bower_package_list="$(bower search --no-color 2>&1 | sed -e 's/^\s*//' | cut -d ' ' -f 1)"
      fi
      # IFS=$'\n' COMPREPLY=($(echo "$__bower_package_list"))  
      __gitcomp_nl "$(echo "$__bower_package_list")"
    else
      __gitcomp_nl "$(bower help --no-color 2>&1 | egrep '^\s+[a-z\-]+(, [a-z\-]+|)\s{2,}' | sed -e 's/^\s*//' -e 's/,//' | cut -d ' ' -f 1)"
      # IFS=$'\n' COMPREPLY=($(bower help --no-color 2>&1 | egrep '^\s+[a-z\-]+(, [a-z\-]+|)\s{2,}' | sed -e 's/^\s*//' -e 's/,//' | cut -d ' ' -f 1))
    fi
    # IFS=$'\n' COMPREPLY=($(COMP_CWORD="$COMP_CWORD" \
    #                        COMP_LINE="$COMP_LINE" \
    #                        COMP_POINT="$COMP_POINT" \
    #                        bower completion -- "${COMP_WORDS[@]}" \
    #                        2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -F _bower_completion bower
# elif type compdef &>/dev/null; then
#   _bower_completion() {
#     si=$IFS
#     compadd "$@" $(bower help --no-color 2>&1 | egrep '^\s+[a-z\-]+(, [a-z\-]+|)\s{2,}' | sed -e 's/^\s*//' -e 's/,//' | cut -d ' ' -f 1)
#     # compadd -- $(COMP_CWORD=$((CURRENT-1)) \
#     #              COMP_LINE=$BUFFER \
#     #              COMP_POINT=0 \
#     #              bower completion -- "${words[@]}" \
#     #              2>/dev/null)
#     IFS=$si
#   }
#   compdef _bower_completion bower
# elif type compctl &>/dev/null; then
#   _bower_completion () {
#     local cword line point words si
#     read -Ac words
#     read -cn cword
#     let cword-=1
#     read -l line
#     read -ln point
#     si="$IFS"
#     IFS=$'\n' reply=$(bower help --no-color 2>&1 | egrep '^\s+[a-z\-]+(, [a-z\-]+|)\s{2,}' | sed -e 's/^\s*//' -e 's/,//' | cut -d ' ' -f 1)
#     # IFS=$'\n' reply=($(COMP_CWORD="$cword" \
#     #                    COMP_LINE="$line" \
#     #                    COMP_POINT="$point" \
#     #                    bower completion -- "${words[@]}" \
#     #                    2>/dev/null)) || return $?
#     IFS="$si"
#   }
#   compctl -K _bower_completion bower
fi
###-end-bower-completion-###
# cget https://raw.github.com/thomasf/dotfiles-thomasf-base/master/.config-base/bash/completion.d/bower
