[user]
	name = 
	useConfigOnly = true
	email = 
[core]
	#autocrlf = input
	# pager = delta --dark --theme base16
	pager = less +X -x2 -R
	# pager = most
	excludesfile = ~/.gitignore
	trustctime = false
	editor = vim
	# trustctime = false
[diff]
	# renames = false
	renames = copies # makes genco choke
	tool = vscode
[difftool]
	prompt = false
[alias]
	aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /' | sort
	br = branch
	ci = commit
	cie = commit-edit
	co = checkout
	st = status -b -s
	stat = status -b -s
	# --pretty=format:"%H%x20%an%x09%ad%x09%s"
	ahead = log --name-status --pretty="format:\"%C(yellow)%h%C(magenta) %an %Creset%Cblue%ar%Creset %s \"" --graph HEAD ^origin/HEAD
	ahead-root = !git --no-pager log --oneline HEAD ^origin/HEAD
	ahead2 = log --name-status --abbrev-commit --pretty=oneline --graph --decorate HEAD ^origin/HEAD
	exclude = "!f() { for p in \"$@\" ; do echo \"$GIT_PREFIX$p\" >> $GIT_DIR/info/exclude ; done; }; f"
	diffc = diff --cached
	last = show --oneline --name-status --decorate
	l = log --pretty=oneline --abbrev-commit --decorate --graph
	la = log --pretty=oneline --abbrev-commit --decorate --graph --exclude=refs/stash --exclude=refs/remotes/*/archive/** --all
	laa = log --pretty=oneline --abbrev-commit --decorate --graph --all
	lo = log --pretty=oneline --abbrev-commit --decorate --graph --remotes=origin --branches
	l2 = log --pretty="tformat:\"%C(yellow)%h%C(red bold)%d%C(magenta) %an %Creset%Cblue%ar%Creset %s\"" --graph --no-notes
	l3 = log --pretty="tformat:\"%C(yellow)%h%C(red bold)%d%C(magenta) %aE %Creset%Cblue%ad%C(green)%gn%Creset %n%s\"" --graph --date=local
	lg = log --name-status --pretty=oneline --abbrev-commit --decorate --graph
	lga = log --name-status --pretty=oneline --abbrev-commit --decorate --graph --all
	lg2 = log --name-status --pretty="format:\"%C(yellow)%h%C(red bold)%d%C(magenta) %an %Creset%Cblue%ar%Creset %s\"" --graph --no-notes
	lg3 = log --name-status --pretty="format:\"%C(yellow)%h%C(red bold)%d%C(magenta) %aE %Creset%Cblue%ad%C(green)%gn%Creset %n%s\"" --graph --date=local
	lgp = log -p --pretty="format:\"%C(yellow)%h%C(red bold)%d%C(magenta) %an %Creset%Cblue%ar%Creset %s\"" --graph
	ll = log --pretty=oneline --abbrev-commit --decorate --graph --branches=*
	shlg = log --name-status --pretty=raw --abbrev-commit --decorate --graphlast = show --name-status --pretty="format:\"%C(yellow)%h%C(magenta) %an %Creset%Cblue%ar%Creset %s \"" --graph
	tracking-status = for-each-ref --format='%(refname:short) <- %(upstream:short)' refs/heads
	ignore-for-now = update-index --assume-unchanged
	root = rev-parse --show-toplevel
	tag-column = !git tag "$@" | column
	# useful to force make to rebuild changed files; just `| xargs touch`
	show-files-only = show --pretty="format:" --name-only
	serve = daemon --export-all --base-path=. --verbose
	commit-edit = "!git commit --edit --file \"$(git rev-parse --git-dir)/COMMIT_EDITMSG\""
	env = "!env"
	checkout-pull-detach = "!f() { git checkout \"$@\" && git pull && git detach-head; }; f"
	worktree-dirs = "!git worktree list --porcelain | rg '^worktree ' | sd '^worktree ' ''"
	worktree-main = "!git worktree list --porcelain | head -n1 | sd '^worktree ' ''"
	# looks like ripgrep
	grep-pretty = "grep --break --heading"
	rg = "grep --break --heading"

	# legit
	# branches = !legit branches
	# brs = !legit branches
	# graft = !legit graft \"$@\"
	# harvest = !legit harvest \"$@\"
	# publish = !legit publish \"$@\"
	# sprout = !legit sprout \"$@\"
	# switch = !legit switch \"$@\"
	# sync = !legit sync \"$@\"
	# unpublish = !legit unpublish \"$@\"

	exec = "!exec "

	# aliases for custom commands
	sm = subl-modified
	sp = subl-projects
	cl = clone
	unstage = reset HEAD --
	dc = diff --cached
	amend = commit --amend --no-edit
	reword = commit --amend
	config-user = "!git config user.name \"$1\" && git config user.email \"$2\" && :"
	d = diff

[color]
	# diff = always
	grep = always
	interactive = always
	status = always
	ui = auto
	branch = auto
	diff = auto
# [color "branch"]
# 	current = yellow reverse
# 	local = yellow
# 	remote = green
# [color "diff"]
# 	meta = red bold
# 	frag = cyan bold
# 	old = red
# 	new = green
[color "status"]
	# added = green
	# changed = green
	untracked = magenta
[color "grep"]
  linenumber="green"
  filename="magenta"

[grep]
	lineNumber = true
[pager]
	branch = false
	ahead = less
	last = false
	ll = true
	ls-files = false
[giggle]
	file-view-vpane-position = 807
	history-view-vpane-position = 216
	main-window-geometry = 1265x1022+653+27
	main-window-maximized = false
	main-window-view = HistoryView
	show-graph = true
[merge]
	#tool = diffuse_windows
	#tool = diffuse_custom
	tool = vscode
	# tool = meld
	# tool = meld_merged
	conflictstyle = diff3
[rerere]
	enabled = 1
[mergetool "diffuse_custom"]
	cmd = /usr/bin/env diffuse \"$LOCAL\" \"$MERGED\" \"$REMOTE\"
	#"
[mergetool "diffuse_base"]
	cmd = /usr/bin/env diffuse \"$LOCAL\" \"$BASE\" \"$REMOTE\"
	#"
[mergetool "meld_merged"]
	cmd = /usr/bin/env meld \"$LOCAL\" \"$MERGED\" \"$REMOTE\"
	#"
[mergetool "diffuse_windows"]
		cmd = \"C:\\Program Files (x86)\\Diffuse\\diffusew.exe\" \"$LOCAL\" \"$MERGED\" \"$REMOTE\"
		#"
[mergetool "diffuse_cygwindows"]
		cmd = \"/cygdrive/c/Program Files (x86)/Diffuse/diffusew.exe\" \"$LOCAL\" \"$MERGED\" \"$REMOTE\"
		#"
[mergetool "meld_windows"]
		cmd = \"C:\\Program Files (x86)\\Meld\\meld\" \"$LOCAL\" \"$MERGED\" \"$REMOTE\"
[github]
	user = forivall
# [push]
# 	default = simple
[push]
	default = simple
[url "git://anongit.kde.org/"]
	insteadOf = kde:
# [url "ssh://git@git.kde.org/"]
# 	pushInsteadOf = kde:
[url "git@git.kde.org:"]
	pushInsteadOf = kde:
[url "https://github.com/"]
	insteadOf = hub:
[url "git@github.com:"]
		pushInsteadOf = hub:
[url "https://gitlab.com/"]
	insteadOf = lab:
[url "git@gitlab.com:"]
	pushInsteadOf = lab:
[credential]
	helper = cache
[mergetool]
	keeptemporaries = false
	keepbackups = false
	prompt = false
	trustexitcode = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[difftool "vscode"]
	cmd = code \"$LOCAL\" \"$REMOTE\" --diff
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
[mergetool "vscode"]
	cmd = code --wait \"$MERGED\"
[commit]
	# template = /Users/emilyklassen/.stCommitMsg
[pull]
	ff = only
[init]
	defaultBranch = main
[extensions]
  worktreeConfig = true
